# Find an efficient algorithm to find the smallest distance (measured in number of words) between any two given words 
# in a string.

# For example, given words "hello", and "world" and a text content of "dog cat hello cat dog dog hello cat world",
#
# return 1 because there's only one word "cat" in between the two words.


def smallest_distance(word1, word2, words):
    words = words.split()
    new_dict = {}
    result = []
    tempHello = []
    tempWorld = []
    for i in range(len(words)):
        if words[i] == word1:
                tempHello.append(i)
                new_dict[words[i]] = tempHello
        elif words[i] == word2:
            tempWorld.append(i)
            new_dict[words[i]] = tempWorld
    
    for x in new_dict.get(word2):
        for y in new_dict.get(word1):
            if x > y:
                result.append(x - y)
    output = min(result) - 1
    print(output)


word1 = 'hello'
word2 = 'world'
words = 'dog cat hello cat dog world dog cat world dog cat tiger mouse world'

smallest_distance(word1, word2, words)
